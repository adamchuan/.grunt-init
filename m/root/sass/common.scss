$browser-default-font-size: 16px !default;

//pxTorem
@function pxTorem($px) {
	@if $px == 0 {
		@return 0;
	}
	@else {
		@return $px / $browser-default-font-size * 1rem;
	}
}
//多参数转rem
@function rem($values) {
  $list: (); /* 存储转变后的值 */

  @each $value in $values { /* 遍历传入的值 */

    @if $value == 0 or $value == auto { /* 0 和 auto 原样返回 */
      $list: append($list, $value);
    }

    @else {
      $unit: unit($value);    /* 取单位 */
      $val: parseInt($value); /* 取数字值 */

      @if $unit == "px" {  /* 转换px值 */
        $list: append($list, ($val / $pixelBase + rem));
      }

      @if $unit == "rem" { /* rem值不转换 */
        $list: append($list, $value);
      }
    }
  }

  @return $list; /* 返回值列表 */
}
//文字省略号
@mixin textoverflow{
	text-overflow: ellipsis;
	overflow: hidden;
	white-space: nowrap;
}
//垂直和水平都居中
@mixin centers($width:100px,$height:100px){
	position: absolute;
	left:0;right:0;bottom:0;top:0;
	margin:auto;
	width:$width;
	height:$height;
}
//动画
@mixin animation($value...){
	-webkit-animation:$value;
	animation:$value;
}
//阴影
@mixin shadowbox($value...){
    -webkit-box-shadow:$value;
    box-shadow:$value;  
}

//compass 二倍图转rem
@mixin s2b($sprite, $name, $toRem:true) {
	$pos_x: floor(nth(sprite-position($sprite, $name), 1) / 2);
	$pos_y: floor(nth(sprite-position($sprite, $name), 2) / 2);
	$width: ceil(image-width(sprite-file($sprite, $name)) / 2);
	$height: ceil(image-height(sprite-file($sprite, $name)) / 2);
	$size_w: ceil(image-width(sprite-path($sprite)) / 2);
	$size_h: ceil(image-height(sprite-path($sprite)) / 2);
	@if $toRem {
		$pos_x: pxTorem($pos_x);
		$pos_y: pxTorem($pos_y);
		$width: pxTorem($width);
		$height: pxTorem($height);
		$size_w: pxTorem($size_w);
		$size_h: pxTorem($size_h);
	}
	background-image: $sprite;
	background-repeat: no-repeat;
	background-position: $pos_x $pos_y;
	background-size: $size_w $size_h;
	height: $height;
	width: $width;
}